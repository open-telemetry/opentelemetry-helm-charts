---
# Source: opentelemetry-target-allocator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: example-opentelemetry-target-allocator-ta
  labels:
    helm.sh/chart: opentelemetry-target-allocator-0.127.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "0.126.0"
    app.kubernetes.io/name: opentelemetry-target-allocator
    app.kubernetes.io/instance: example
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: opentelemetry-target-allocator
      app.kubernetes.io/instance: example
  template:
    metadata:
      annotations:
        checksum/config: 02dcc44791e68e17bf4b386206c0363378c41c872f7d90dbcbbb6e0dcb7390c8
        prometheus.io/path: /metrics
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
      labels:
        helm.sh/chart: opentelemetry-target-allocator-0.127.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/version: "0.126.0"
        app.kubernetes.io/name: opentelemetry-target-allocator
        app.kubernetes.io/instance: example
        component: target-allocator
        tier: monitoring
    spec:
      serviceAccountName: example-opentelemetry-target-allocator-ta
      automountServiceAccountToken: false
      securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
        seccompProfile:
          type: RuntimeDefault
      priorityClassName: system-cluster-critical
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: Exists
            weight: 100
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
      containers:
        - name: targetallocator
          image: ghcr.io/open-telemetry/opentelemetry-operator/target-allocator:0.126.0
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 65534
            runAsNonRoot: true
            runAsUser: 65534
          ports:
            - containerPort: 8080
              name: http-port
              protocol: TCP
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: http-port
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: http-port
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
          startupProbe:
            failureThreshold: 10
            httpGet:
              path: /readyz
              port: http-port
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 1000m
              memory: 1Gi
            requests:
              cpu: 200m
              memory: 256Mi
          volumeMounts:
            - name: config-volume
              mountPath: /conf/
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: serviceaccount-token
              readOnly: true
            - name: tmp-volume
              mountPath: /tmp
          env: # Workaround for https://github.com/open-telemetry/opentelemetry-operator/pull/3976
            - name: OTELCOL_NAMESPACE
              value: opentelemetry-system
      volumes:
        - name: config-volume
          configMap:
            name: example-opentelemetry-target-allocator-ta-configmap
        - name: serviceaccount-token
          projected:
            defaultMode: 0444
            sources:
              - serviceAccountToken:
                  path: token
              - configMap:
                  name: kube-root-ca.crt
                  items:
                    - key: ca.crt
                      path: ca.crt
              - downwardAPI:
                  items:
                    - path: namespace
                      fieldRef:
                        apiVersion: v1
                        fieldPath: metadata.namespace
        - name: tmp-volume
          emptyDir: {}
