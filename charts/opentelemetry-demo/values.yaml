observability:
  # collector settings are configured in the opentelemetry-collector section.
  otelcol:
    enabled: true
  jaeger:
    enabled: true
    image:
      repository: jaegertracing/all-in-one
      # Overrides the image tag whose default is the chart appVersion.
      tag: "latest"
      pullPolicy: IfNotPresent
      pullSecrets: []
    args: ["--memory.max-traces", "10000"]
    resources:
      limits:
        memory: 275Mi
    serviceType: "ClusterIP"

default:
  env:
    OTEL_SERVICE_NAME:
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: "metadata.labels['app.kubernetes.io/component']"
    OTEL_K8S_NAMESPACE:
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.namespace
    OTEL_K8S_NODE_NAME:
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: spec.nodeName
    OTEL_K8S_POD_NAME:
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.name
    OTEL_RESOURCE_ATTRIBUTES:
      value: service.name=$(OTEL_SERVICE_NAME),k8s.namespace.name=$(OTEL_K8S_NAMESPACE),k8s.node.name=$(OTEL_K8S_NODE_NAME),k8s.pod.name=$(OTEL_K8S_POD_NAME)
  image:
    repository: otel/demo
    # Overrides the image tag whose default is the chart appVersion.
    # The service's name will be applied to the end of this value.
    tag: ""
    pullPolicy: IfNotPresent
    pullSecrets: []
  schedulingRules:
    nodeSelector: {}
    affinity: {}
    tolerations: []

serviceAccount: ""

components:
  redis:
    enabled: true
    useDefault:
      env: true

    # Options to override the default image settings.
    imageOverride:
      repository: "redis"
      tag: "alpine"
    ports:
      - name: redis
        value: 6379
    resources:
      limits:
        memory: 20Mi
    schedulingRules:
      nodeSelector: {}
      affinity: {}
      tolerations: []

  adService:
    enabled: true
    useDefault:
      env: true

    imageOverride: {}
    serviceType: ClusterIP
    schedulingRules:
      nodeSelector: {}
      affinity: {}
      tolerations: []
    servicePort: 8080
    env:
      OTEL_EXPORTER_OTLP_ENDPOINT:
        value: 'http://{{ include "otel-demo.name" . }}-otelcol:4317'
      AD_SERVICE_PORT:
        value: "8080"
    podAnnotations: {}
    resources:
      limits:
        memory: 300Mi

  cartService:
    enabled: true
    useDefault:
      env: true

    imageOverride: {}
    serviceType: ClusterIP
    schedulingRules:
      nodeSelector: {}
      affinity: {}
      tolerations: []
    servicePort: 8080
    env:
      ASPNETCORE_URLS:
        value: http://*:8080
      REDIS_ADDR:
        value: '{{ include "otel-demo.name" . }}-redis:6379'
      OTEL_EXPORTER_OTLP_ENDPOINT:
        value: 'http://{{ include "otel-demo.name" . }}-otelcol:4317'
      CART_SERVICE_PORT:
        value: "8080"
    podAnnotations: {}
    resources:
      limits:
        memory: 160Mi

  checkoutService:
    enabled: true
    useDefault:
      env: true

    imageOverride: {}
    serviceType: ClusterIP
    schedulingRules:
      nodeSelector: {}
      affinity: {}
      tolerations: []
    servicePort: 8080
    env:
      CART_SERVICE_ADDR:
        value: '{{ include "otel-demo.name" . }}-cartservice:8080'
      CURRENCY_SERVICE_ADDR:
        value: '{{ include "otel-demo.name" . }}-currencyservice:8080'
      PAYMENT_SERVICE_ADDR:
        value: '{{ include "otel-demo.name" . }}-paymentservice:8080'
      PRODUCT_CATALOG_SERVICE_ADDR:
        value: '{{ include "otel-demo.name" . }}-productcatalogservice:8080'
      SHIPPING_SERVICE_ADDR:
        value: '{{ include "otel-demo.name" . }}-shippingservice:8080'
      EMAIL_SERVICE_ADDR:
        value: 'http://{{ include "otel-demo.name" . }}-emailservice:8080'
      OTEL_EXPORTER_OTLP_ENDPOINT:
        value: 'http://{{ include "otel-demo.name" . }}-otelcol:4317'
      CHECKOUT_SERVICE_PORT:
        value: "8080"
    podAnnotations: {}
    resources:
      limits:
        memory: 20Mi

  currencyService:
    enabled: true
    useDefault:
      env: true

    imageOverride: {}
    schedulingRules:
      nodeSelector: {}
      affinity: {}
      tolerations: []
    serviceType: ClusterIP
    servicePort: 8080
    env:
      PORT:
        value: "8080"
      OTEL_EXPORTER_OTLP_ENDPOINT:
        value: 'http://{{ include "otel-demo.name" . }}-otelcol:4317'
      CURRENCY_SERVICE_PORT:
        value: "8080"
    podAnnotations: {}
    resources:
      limits:
        memory: 20Mi


  emailService:
    enabled: true
    useDefault:
      env: true

    imageOverride: {}
    serviceType: ClusterIP
    schedulingRules:
      nodeSelector: {}
      affinity: {}
      tolerations: []
    servicePort: 8080
    env:
      APP_ENV:
        value: production
      PORT:
        value: "8080"
      OTEL_EXPORTER_OTLP_ENDPOINT:
        value: 'http://{{ include "otel-demo.name" . }}-otelcol:4317'
      OTEL_EXPORTER_OTLP_TRACES_ENDPOINT:
        value: 'http://{{ include "otel-demo.name" . }}-otelcol:4318/v1/traces'
      EMAIL_SERVICE_PORT:
        value: "8080"
    podAnnotations: {}
    resources:
      limits:
        memory: 100Mi

  featureflagService:
    enabled: true
    useDefault:
      env: true

    imageOverride: {}
    schedulingRules:
      nodeSelector: {}
      affinity: {}
      tolerations: []
    env:
      FEATURE_FLAG_GRPC_SERVICE_PORT:
        value: "50053"
      FEATURE_FLAG_SERVICE_PORT:
        value: "8081"
      OTEL_EXPORTER_OTLP_TRACES_PROTOCOL:
        value: grpc
      DATABASE_URL:
        value: 'ecto://ffs:ffs@{{ include "otel-demo.name" . }}-ffspostgres:5432/ffs'
      OTEL_EXPORTER_OTLP_ENDPOINT:
        value: 'http://{{ include "otel-demo.name" . }}-otelcol:4317'
    serviceType: ClusterIP
    ports:
      - name: grpc
        value: 50053
      - name: http
        value: 8081
    podAnnotations: {}
    resources:
      limits:
        memory: 160Mi


  ffsPostgres:
    enabled: true
    useDefault:
      env: true

    imageOverride:
      repository: "postgres"
      tag: "14"
    schedulingRules:
      nodeSelector: {}
      affinity: {}
      tolerations: []
    env:
      POSTGRES_DB:
        value: ffs
      POSTGRES_PASSWORD:
        value: ffs
      POSTGRES_USER:
        value: ffs
      OTEL_EXPORTER_OTLP_ENDPOINT:
        value: 'http://{{ include "otel-demo.name" . }}-otelcol:4317'
    serviceType: ClusterIP
    ports:
      - name: postgres
        value: 5432
    podAnnotations: {}
    resources:
      limits:
        memory: 120Mi


  frontend:
    enabled: true
    useDefault:
      env: true

    imageOverride: {}
    schedulingRules:
      nodeSelector: {}
      affinity: {}
      tolerations: []
    serviceType: ClusterIP
    servicePort: 8080
    env:
      FRONTEND_ADDR:
        value: :8080
      AD_SERVICE_ADDR:
        value: '{{ include "otel-demo.name" . }}-adservice:8080'
      CART_SERVICE_ADDR:
        value: '{{ include "otel-demo.name" . }}-cartservice:8080'
      CHECKOUT_SERVICE_ADDR:
        value: '{{ include "otel-demo.name" . }}-checkoutservice:8080'
      CURRENCY_SERVICE_ADDR:
        value: '{{ include "otel-demo.name" . }}-currencyservice:8080'
      PRODUCT_CATALOG_SERVICE_ADDR:
        value: '{{ include "otel-demo.name" . }}-productcatalogservice:8080'
      RECOMMENDATION_SERVICE_ADDR:
        value: '{{ include "otel-demo.name" . }}-recommendationservice:8080'
      SHIPPING_SERVICE_ADDR:
        value: '{{ include "otel-demo.name" . }}-shippingservice:8080'
      OTEL_EXPORTER_OTLP_ENDPOINT:
        value: 'http://{{ include "otel-demo.name" . }}-otelcol:4317'
      FRONTEND_PORT:
        value: "8080"
    podAnnotations: {}
    resources:
      limits:
        memory: 200Mi

  loadgenerator:
    enabled: true
    useDefault:
      env: true

    imageOverride: {}
    schedulingRules:
      nodeSelector: {}
      affinity: {}
      tolerations: []
    serviceType: ClusterIP
    servicePort: 8089
    env:
      FRONTEND_ADDR:
        value: '{{ include "otel-demo.name" . }}-frontend:8080'
      LOCUST_WEB_PORT:
        value: "8089"
      LOCUST_USERS:
        value: "10"
      LOCUST_HOST:
        value: "http://$(FRONTEND_ADDR)"
      LOCUST_HEADLESS:
        value: "false"
      LOCUST_AUTOSTART:
        value: "true"
      PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION:
        value: python
      OTEL_EXPORTER_OTLP_ENDPOINT:
        value: 'http://{{ include "otel-demo.name" . }}-otelcol:4317'
      LOADGENERATOR_PORT:
        value: "8089"
    podAnnotations: {}
    resources:
      limits:
        memory: 120Mi

  paymentService:
    enabled: true
    useDefault:
      env: true

    imageOverride: {}
    schedulingRules:
      nodeSelector: {}
      affinity: {}
      tolerations: []
    serviceType: ClusterIP
    servicePort: 8080
    env:
      OTEL_EXPORTER_OTLP_ENDPOINT:
        value: 'http://{{ include "otel-demo.name" . }}-otelcol:4317'
      PAYMENT_SERVICE_PORT:
        value: "8080"
    podAnnotations: {}
    resources:
      limits:
        memory: 70Mi

  productCatalogService:
    enabled: true
    useDefault:
      env: true

    imageOverride: {}
    schedulingRules:
      nodeSelector: {}
      affinity: {}
      tolerations: []
    serviceType: ClusterIP
    servicePort: 8080
    env:
      OTEL_EXPORTER_OTLP_ENDPOINT:
        value: 'http://{{ include "otel-demo.name" . }}-otelcol:4317'
      PRODUCT_CATALOG_SERVICE_PORT:
        value: "8080"
      FEATURE_FLAG_GRPC_SERVICE_ADDR:
        value: '{{ include "otel-demo.name" . }}-featureflagservice:50053'
    podAnnotations: {}
    resources:
      limits:
        memory: 20Mi

  recommendationService:
    enabled: true
    useDefault:
      env: true

    imageOverride: {}
    schedulingRules:
      nodeSelector: {}
      affinity: {}
      tolerations: []
    serviceType: ClusterIP
    servicePort: 8080
    env:
      OTEL_PYTHON_LOG_CORRELATION:
        value: "true"
      PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION:
        value: python
      OTEL_EXPORTER_OTLP_ENDPOINT:
        value: 'http://{{ include "otel-demo.name" . }}-otelcol:4317'
      FEATURE_FLAG_GRPC_SERVICE_ADDR:
        value: '{{ include "otel-demo.name" . }}-featureflagservice:50053'
      RECOMMENDATION_SERVICE_PORT:
        value: "8080"
      PRODUCT_CATALOG_SERVICE_ADDR:
        value: '{{ include "otel-demo.name" . }}-productcatalogservice:8080'
    podAnnotations: {}
    resources:
      limits:
        memory: 500Mi            # This is high to enable supporting the recommendationCache feature flag use case

  shippingService:
    enabled: true
    useDefault:
      env: true

    imageOverride: {}
    schedulingRules:
      nodeSelector: {}
      affinity: {}
      tolerations: []
    serviceType: ClusterIP
    servicePort: 8080
    env:
      PORT:
        value: "8080"
      OTEL_EXPORTER_OTLP_ENDPOINT:
        value: 'http://{{ include "otel-demo.name" . }}-otelcol:4317'
      OTEL_EXPORTER_OTLP_TRACES_ENDPOINT:
        value: 'http://{{ include "otel-demo.name" . }}-otelcol:4317'
      SHIPPING_SERVICE_PORT:
        value: "8080"
      QUOTE_SERVICE_ADDR:
        value: 'http://{{ include "otel-demo.name" . }}-quoteservice:8080'
    podAnnotations: {}
    resources:
      limits:
        memory: 20Mi

  quoteService:
    enabled: true
    useDefault:
      env: true

    imageOverride: {}
    schedulingRules:
      nodeSelector: {}
      affinity: {}
      tolerations: []
    serviceType: ClusterIP
    servicePort: 8080
    env:
      OTEL_TRACES_SAMPLER:
        value: "parentbased_always_on"
      OTEL_TRACES_EXPORTER:
        value: "otlp"
      OTEL_EXPORTER_OTLP_TRACES_PROTOCOL:
        value: "grpc"
      OTEL_PHP_TRACES_PROCESSOR:
        value: "simple"
      OTEL_EXPORTER_OTLP_ENDPOINT:
        value: '{{ include "otel-demo.name" . }}-otelcol:4317'
      QUOTE_SERVICE_PORT:
        value: "8080"
    podAnnotations: {}
    resources:
      limits:
        memory: 30Mi

opentelemetry-collector:
  nameOverride: otelcol
  mode: deployment
  resources:
    limits:
      memory: 100Mi
  service:
    type: ClusterIP
  config:
    receivers:
      otlp:
        protocols:
          grpc:
          http:
            cors:
              allowed_origins:
                - "http://*"
                - "https://*"
    exporters:
      otlp:
        endpoint: '{{ .Release.Name }}-jaeger:4317'
        tls:
          insecure: true
    service:
      pipelines:
        traces:
          exporters:
            - logging
            - otlp
