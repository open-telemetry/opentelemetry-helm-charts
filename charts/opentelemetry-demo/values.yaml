observability:
  # collector settings are configured in the opentelemetry-collector section.
  otelcol:
    enabled: true
  jaeger:
    enabled: true
    image:
      repository: jaegertracing/all-in-one
      # Overrides the image tag whose default is the chart appVersion.
      tag: "latest"
      pullPolicy: IfNotPresent
      pullSecrets: []

default:
  env:
    - name: OTEL_SERVICE_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: "metadata.labels['app.kubernetes.io/component']"
    - name: OTEL_K8S_NAMESPACE
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.namespace
    - name: OTEL_K8S_NODE_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: spec.nodeName
    - name: OTEL_K8S_POD_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.name
    - name: OTEL_RESOURCE_ATTRIBUTES
      value: service.name=$(OTEL_SERVICE_NAME),k8s.namespace.name=$(OTEL_K8S_NAMESPACE),k8s.node.name=$(OTEL_K8S_NODE_NAME),k8s.pod.name=$(OTEL_K8S_POD_NAME)
  image:
    repository: otel/demo
    # Overrides the image tag whose default is the chart appVersion.
    # The service's name will be applied to the end of this value.
    tag: ""
    pullPolicy: IfNotPresent
    pullSecrets: []

serviceAccount: ""

components:
  redis:
    enabled: true
    useDefault:
      env: true
    # Options to override the default image settings.
    imageOverride:
      repository: "redis"
      tag: "alpine"
    ports:
      - name: redis
        value: 6379

  adService:
    enabled: true
    useDefault:
      env: true
    imageOverride: {}
    servicePort: 8080
    env:
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: 'http://{{ include "otel-demo.name" . }}-otelcol:4317'
      - name: AD_SERVICE_PORT
        value: "8080"
    podAnnotations: {}
    #  sidecar.opentelemetry.io/inject: "false"
    #  instrumentation.opentelemetry.io/inject-java: "true"

  cartService:
    enabled: true
    useDefault:
      env: true
    imageOverride: {}
    servicePort: 8080
    env:
      - name: ASPNETCORE_URLS
        value: http://*:8080
      - name: REDIS_ADDR
        value: '{{ include "otel-demo.name" . }}-redis:6379'
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: 'http://{{ include "otel-demo.name" . }}-otelcol:4317'
      - name: CART_SERVICE_PORT
        value: "8080"
    podAnnotations: {}
    #  sidecar.opentelemetry.io/inject: "false"
    #  instrumentation.opentelemetry.io/inject-dotnet: "true"

  checkoutService:
    enabled: true
    useDefault:
      env: true
    imageOverride: {}
    servicePort: 8080
    env:
      - name: CART_SERVICE_ADDR
        value: '{{ include "otel-demo.name" . }}-cart-service:8080'
      - name: CURRENCY_SERVICE_ADDR
        value: '{{ include "otel-demo.name" . }}-currency-service:8080'
      - name: PAYMENT_SERVICE_ADDR
        value: '{{ include "otel-demo.name" . }}-payment-service:8080'
      - name: PRODUCT_CATALOG_SERVICE_ADDR
        value: '{{ include "otel-demo.name" . }}-product-catalog-service:8080'
      - name: SHIPPING_SERVICE_ADDR
        value: '{{ include "otel-demo.name" . }}-shipping-service:8080'
      - name: EMAIL_SERVICE_ADDR
        value: 'http://{{ include "otel-demo.name" . }}-email-service:8080'
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: 'http://{{ include "otel-demo.name" . }}-otelcol:4317'
      - name: CHECKOUT_SERVICE_PORT
        value: "8080"
    podAnnotations: {}
    #  instrumentation.opentelemetry.io/inject-sdk: "true"

  currencyService:
    enabled: true
    useDefault:
      env: true
    imageOverride: {}
    servicePort: 8080
    env:
      - name: PORT
        value: "8080"
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: 'http://{{ include "otel-demo.name" . }}-otelcol:4317'
      - name: CURRENCY_SERVICE_PORT
        value: "8080"
    podAnnotations: {}
    #  instrumentation.opentelemetry.io/inject-sdk: "true"

  emailService:
    enabled: true
    useDefault:
      env: true
    imageOverride: {}
    servicePort: 8080
    env:
      - name: APP_ENV
        value: production
      - name: PORT
        value: "8080"
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: 'http://{{ include "otel-demo.name" . }}-otelcol:4317'
      - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
        value: 'http://{{ include "otel-demo.name" . }}-otelcol:4318/v1/traces'
      - name: EMAIL_SERVICE_PORT
        value: "8080"
    podAnnotations: {}
    #  instrumentation.opentelemetry.io/inject-sdk: "true"

  featureflagService:
    enabled: true
    useDefault:
      env: true
    imageOverride: {}
    env:
      - name: FEATURE_FLAG_GRPC_SERVICE_PORT
        value: "50053"
      - name: FEATURE_FLAG_SERVICE_PORT
        value: "8081"
      - name: OTEL_EXPORTER_OTLP_TRACES_PROTOCOL
        value: grpc
      - name: DATABASE_URL
        value: 'ecto://ffs:ffs@{{ include "otel-demo.name" . }}-ffs-postgres:5432/ffs'
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: 'http://{{ include "otel-demo.name" . }}-otelcol:4317'
    ports:
      - name: grpc
        value: 50053
      - name: http
        value: 8081
    podAnnotations: {}
    #  instrumentation.opentelemetry.io/inject-sdk: "true"

  ffsPostgres:
    enabled: true
    useDefault:
      env: true
    imageOverride:
      repository: "cimg/postgres"
      tag: "14.2"
    env:
      - name: POSTGRES_DB
        value: ffs
      - name: POSTGRES_PASSWORD
        value: ffs
      - name: POSTGRES_USER
        value: ffs
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: 'http://{{ include "otel-demo.name" . }}-otelcol:4317'
    ports:
      - name: postgres
        value: 5432
    podAnnotations: {}
    #  instrumentation.opentelemetry.io/inject-sdk: "true"

  frontend:
    enabled: true
    useDefault:
      env: true
    imageOverride: {}
    servicePort: 8080
    env:
      - name: FRONTEND_ADDR
        value: :8080
      - name: AD_SERVICE_ADDR
        value: '{{ include "otel-demo.name" . }}-ad-service:8080'
      - name: CART_SERVICE_ADDR
        value: '{{ include "otel-demo.name" . }}-cart-service:8080'
      - name: CHECKOUT_SERVICE_ADDR
        value: '{{ include "otel-demo.name" . }}-checkout-service:8080'
      - name: CURRENCY_SERVICE_ADDR
        value: '{{ include "otel-demo.name" . }}-currency-service:8080'
      - name: PRODUCT_CATALOG_SERVICE_ADDR
        value: '{{ include "otel-demo.name" . }}-product-catalog-service:8080'
      - name: RECOMMENDATION_SERVICE_ADDR
        value: '{{ include "otel-demo.name" . }}-recommendation-service:8080'
      - name: SHIPPING_SERVICE_ADDR
        value: '{{ include "otel-demo.name" . }}-shipping-service:8080'
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: 'http://{{ include "otel-demo.name" . }}-otelcol:4317'
      - name: FRONTEND_PORT
        value: "8080"
    podAnnotations: {}
    #  instrumentation.opentelemetry.io/inject-sdk: "true"

  loadgenerator:
    enabled: true
    useDefault:
      env: true
    imageOverride: {}
    servicePort: 8089
    env:
      - name: FRONTEND_ADDR
        value: '{{ include "otel-demo.name" . }}-frontend:8080'
      - name: LOCUST_WEB_PORT
        value: "8089"
      - name: LOCUST_USERS
        value: "10"
      - name: LOCUST_HOST
        value: "http://$(FRONTEND_ADDR)"
      - name: LOCUST_HEADLESS
        value: "false"
      - name: LOCUST_AUTOSTART
        value: "true"
      - name: PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION
        value: python
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: 'http://{{ include "otel-demo.name" . }}-otelcol:4317'
      - name: LOADGENERATOR_PORT
        value: "8089"
    podAnnotations: {}
    #  instrumentation.opentelemetry.io/inject-python: "true"

  paymentService:
    enabled: true
    useDefault:
      env: true
    imageOverride: {}
    servicePort: 8080
    env:
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: 'http://{{ include "otel-demo.name" . }}-otelcol:4317'
      - name: PAYMENT_SERVICE_PORT
        value: "8080"
    podAnnotations: {}
    #  instrumentation.opentelemetry.io/inject-nodejs: "true"

  productCatalogService:
    enabled: true
    useDefault:
      env: true
    imageOverride: {}
    servicePort: 8080
    env:
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: 'http://{{ include "otel-demo.name" . }}-otelcol:4317'
      - name: PRODUCT_CATALOG_SERVICE_PORT
        value: "8080"
      - name: FEATURE_FLAG_GRPC_SERVICE_ADDR
        value: '{{ include "otel-demo.name" . }}-featureflag-service:50053'
    podAnnotations: {}
    #  instrumentation.opentelemetry.io/inject-sdk: "true"

  recommendationService:
    enabled: true
    useDefault:
      env: true
    imageOverride: {}
    servicePort: 8080
    env:
      - name: OTEL_PYTHON_LOG_CORRELATION
        value: "true"
      - name: PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION
        value: python
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: 'http://{{ include "otel-demo.name" . }}-otelcol:4317'
      - name: RECOMMENDATION_SERVICE_PORT
        value: "8080"
      - name: PRODUCT_CATALOG_SERVICE_ADDR
        value: '{{ include "otel-demo.name" . }}-product-catalog-service:8080'
    podAnnotations: {}
    #  instrumentation.opentelemetry.io/inject-python: "true"

  shippingService:
    enabled: true
    useDefault:
      env: true
    imageOverride: {}
    servicePort: 8080
    env:
      - name: PORT
        value: "8080"
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: 'http://{{ include "otel-demo.name" . }}-otelcol:4317'
      - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
        value: 'http://{{ include "otel-demo.name" . }}-otelcol:4317'
      - name: SHIPPING_SERVICE_PORT
        value: "8080"
      - name: QUOTE_SERVICE_ADDR
        value: 'http://{{ include "otel-demo.name" . }}-quote-service:8080'
    podAnnotations: {}
    #  instrumentation.opentelemetry.io/inject-sdk: "true"

  quoteService:
    enabled: true
    useDefault:
      env: true
    imageOverride: {}
    servicePort: 8080
    env:
      - name: OTEL_TRACES_SAMPLER
        value: "parentbased_always_on"
      - name: OTEL_TRACES_EXPORTER
        value: "otlp"
      - name: OTEL_EXPORTER_OTLP_TRACES_PROTOCOL
        value: "grpc"
      - name: OTEL_PHP_TRACES_PROCESSOR
        value: "simple"
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: '{{ include "otel-demo.name" . }}-otelcol:4317'
      - name: QUOTE_SERVICE_PORT
        value: "8080"
    podAnnotations: {}
    #  instrumentation.opentelemetry.io/inject-sdk: "true"


opentelemetry-collector:
  nameOverride: otelcol
  mode: deployment
  config:
    exporters:
      jaeger:
        endpoint: '{{ .Release.Name }}-jaeger:14250'
        tls:
          insecure: true
    service:
      pipelines:
        traces:
          exporters:
            - logging
            - jaeger
