observability:
  otelcol:
    enabled: true
  jaeger:
    enabled: true

# if the enabled is true, the items in this object will apply to all components
default:
  enabled: true
  env:
    - name: OTEL_SERVICE_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: 'metadata.labels[''app.kubernetes.io/component'']'
    - name: OTEL_K8S_NAMESPACE
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.namespace
    - name: OTEL_K8S_NODE_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: spec.nodeName
    - name: OTEL_K8S_POD_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.name
    - name: OTEL_RESOURCE_ATTRIBUTES
      value: service.name=$(OTEL_SERVICE_NAME),k8s.namespace.name=$(OTEL_K8S_NAMESPACE),k8s.node.name=$(OTEL_K8S_NODE_NAME),k8s.pod.name=$(OTEL_K8S_POD_NAME)
image:
  repository: otel/demo
  pullSecrets: []

serviceAccount: ""

components:
  redis:
    enabled: true
    image: redis:alpine
    ports:
    - name: redis
      value: 6379

  adService:
    enabled: true
    servicePort: 8080
    podAnnotations: {}
    #  sidecar.opentelemetry.io/inject: "false"
    #  instrumentation.opentelemetry.io/inject-java: "true"
  cartService:
    enabled: true
    servicePort: 8080
    env:
    - name: ASPNETCORE_URLS
      value: http://*:8080
    podAnnotations: {}
    #  sidecar.opentelemetry.io/inject: "false"
    #  instrumentation.opentelemetry.io/inject-dotnet: "true"

  checkoutService:
    enabled: true
    servicePort: 8080
    podAnnotations: {}
    #  instrumentation.opentelemetry.io/inject-sdk: "true"

  currencyService:
    enabled: true
    servicePort: 8080
    env:
    - name: PORT
      value: '8080'
    podAnnotations: {}
    #  instrumentation.opentelemetry.io/inject-sdk: "true"

  emailService:
    enabled: true
    servicePort: 8080
    env:
    - name: APP_ENV
      value: production
    - name: PORT
      value: '8080'
    podAnnotations: {}
    #  instrumentation.opentelemetry.io/inject-sdk: "true"

  featureflagService:
    enabled: true
    env:
    # DATABASE_URL will be automatically added to use the enabled ffsPostgres component.
    # If a different url is desired, set DATABASE_URL here.
    # - name: DATABASE_URL
    #   value:
    - name: FEATURE_FLAG_GRPC_SERVICE_PORT
      value: '50053'
    - name: FEATURE_FLAG_SERVICE_PORT
      value: '8081'
    ports:
    - name: grpc
      value: 50053
    - name: http
      value: 8081
    podAnnotations: {}
    #  instrumentation.opentelemetry.io/inject-sdk: "true"

  ffsPostgres:
    enabled: true
    env:
    - name: POSTGRES_DB
      value: ffs
    - name: POSTGRES_PASSWORD
      value: ffs
    - name: POSTGRES_USER
      value: ffs
    image: cimg/postgres:14.2
    ports:
    - name: postgres
      value: 5432
    podAnnotations: {}
    #  instrumentation.opentelemetry.io/inject-sdk: "true"

  frontend:
    enabled: true
    servicePort: 8080
    env:
    - name: FRONTEND_ADDR
      value: :8080
    podAnnotations: {}
    #  instrumentation.opentelemetry.io/inject-sdk: "true"

  loadgenerator:
    enabled: true
    servicePort: 8089
    env:
    - name: LOCUST_WEB_PORT
      value: '8089'
    - name: LOCUST_USERS
      value: '10'
    - name: LOCUST_HOST
      value: http://${FRONTEND_ADDR}
    - name: LOCUST_HEADLESS
      value: 'false'
    - name: LOCUST_AUTOSTART
      value: 'true'
    - name: PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION
      value: python
    podAnnotations: {}
    #  instrumentation.opentelemetry.io/inject-python: "true"

  paymentService:
    enabled: true
    servicePort: 8080
    podAnnotations: {}
    #  instrumentation.opentelemetry.io/inject-nodejs: "true"

  productCatalogService:
    enabled: true
    servicePort: 8080
    podAnnotations: {}
    #  instrumentation.opentelemetry.io/inject-sdk: "true"

  recommendationService:
    enabled: true
    servicePort: 8080
    env:
    - name: OTEL_PYTHON_LOG_CORRELATION
      value: 'true'
    podAnnotations: {}
    #  instrumentation.opentelemetry.io/inject-python: "true"

  shippingService:
    enabled: true
    servicePort: 8080
    env:
    - name: PORT
      value: '8080'
    podAnnotations: {}
    #  instrumentation.opentelemetry.io/inject-sdk: "true"
