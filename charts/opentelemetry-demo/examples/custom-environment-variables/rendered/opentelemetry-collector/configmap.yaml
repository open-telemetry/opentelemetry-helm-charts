---
# Source: opentelemetry-demo/charts/opentelemetry-collector/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: example-otelcol
  labels:
    helm.sh/chart: opentelemetry-collector-0.55.1
    app.kubernetes.io/name: otelcol
    app.kubernetes.io/instance: example
    app.kubernetes.io/version: "0.76.1"
    app.kubernetes.io/managed-by: Helm
data:
  relay: |
    connectors:
      spanmetrics: null
    exporters:
      logging: {}
      otlp:
        endpoint: 'example-jaeger-collector:4317'
        tls:
          insecure: true
      prometheus:
        enable_open_metrics: true
        endpoint: 0.0.0.0:9464
        resource_to_telemetry_conversion:
          enabled: true
    extensions:
      health_check: {}
      memory_ballast:
        size_in_percentage: 40
    processors:
      attributes:
        actions:
        - action: insert
          key: app.eng.team
          value: ring
        include:
          match_type: strict
          services:
          - frontend-proxy
      batch: {}
      filter/ottl:
        error_mode: ignore
        metrics:
          metric:
          - name == "queueSize"
      memory_limiter:
        check_interval: 5s
        limit_percentage: 80
        spike_limit_percentage: 25
      transform:
        metric_statements:
        - context: metric
          statements:
          - set(description, "Measures the duration of inbound HTTP requests") where name
            == "http.server.duration"
    receivers:
      jaeger:
        protocols:
          grpc:
            endpoint: ${env:MY_POD_IP}:14250
          thrift_compact:
            endpoint: ${env:MY_POD_IP}:6831
          thrift_http:
            endpoint: ${env:MY_POD_IP}:14268
      otlp:
        protocols:
          grpc:
            endpoint: ${env:MY_POD_IP}:4317
          http:
            cors:
              allowed_origins:
              - http://*
              - https://*
            endpoint: 0.0.0.0:4318
      prometheus:
        config:
          scrape_configs:
          - job_name: opentelemetry-collector
            scrape_interval: 10s
            static_configs:
            - targets:
              - ${env:MY_POD_IP}:8888
      zipkin:
        endpoint: ${env:MY_POD_IP}:9411
    service:
      extensions:
      - health_check
      - memory_ballast
      pipelines:
        logs:
          exporters:
          - logging
          processors:
          - memory_limiter
          - batch
          receivers:
          - otlp
        metrics:
          exporters:
          - prometheus
          - logging
          processors:
          - memory_limiter
          - filter/ottl
          - transform
          - batch
          receivers:
          - otlp
          - spanmetrics
        traces:
          exporters:
          - otlp
          - logging
          - spanmetrics
          processors:
          - memory_limiter
          - attributes
          - spanmetrics
          - batch
          receivers:
          - otlp
          - jaeger
          - zipkin
      telemetry:
        metrics:
          address: ${env:MY_POD_IP}:8888
