clusterName: demo
opentelemetry-operator:
  enabled: true
defaultCRConfig:
  targetAllocator:
    enabled: true
    image: ghcr.io/open-telemetry/opentelemetry-operator/target-allocator:main
    prometheusCR:
      enabled: true
      podMonitorSelector:
        matchLabels:
          app: my-app
      scrapeInterval: "30s"
      serviceMonitorSelector:
        matchExpressions:
          - key: kubernetes.io/app-name
            operator: In
            values: ["my-app"]
collectors:
  daemon:
    enabled: true
    config:
      receivers:
        prometheus:
          config:
            scrape_configs:
            - job_name: 'otel-collector'
              scrape_interval: 30s
              static_configs:
              - targets: [ '0.0.0.0:8888' ]
          target_allocator:
            endpoint: http://otelcol-targetallocator
            interval: 30s
            collector_id: "${POD_NAME}"
      exporters:
        otlp:
          endpoint: ingest.example.com:443
          headers:
            "access-token": "${ACCESS_TOKEN}"
      service:
        pipelines:
          metrics:
            receivers: [prometheus]
            exporters: [debug, otlp]
          traces:
            exporters: [debug, otlp]
          logs:
            exporters: [debug, otlp]
    env:
      - name: ACCESS_TOKEN
        valueFrom:
          secretKeyRef:
            key: access_token
            name: otel-collector-secret
    scrape_configs_file: ""
    presets:
      logsCollection:
        enabled: false
      kubeletMetrics:
        enabled: false
      hostMetrics:
        enabled: false
      kubernetesAttributes:
        enabled: false
  cluster:
    enabled: false
instrumentation:
  enabled: false
opAMPBridge:
  enabled: false
