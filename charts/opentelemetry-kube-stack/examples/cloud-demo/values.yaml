clusterName: demo
opentelemetry-operator:
  enabled: true
defaultCRConfig:
  targetAllocator:
    image: ghcr.io/open-telemetry/opentelemetry-operator/target-allocator:main
    observability:
      metrics:
        disablePrometheusAnnotations: true
        enableMetrics: true
    prometheusCR:
      enabled: true
      podMonitorSelector:
        matchLabels:
          app: my-app
      scrapeInterval: "30s"
      serviceMonitorSelector:
        matchExpressions:
          - key: kubernetes.io/app-name
            operator: In
            values: ["my-app"]
collectors:
  daemon:
    env:
      - name: ACCESS_TOKEN
        valueFrom:
          secretKeyRef:
            key: access_token
            name: otel-collector-secret
    config:
      exporters:
        otlp:
          endpoint: ingest.example.com:443
          headers:
            "access-token": "${ACCESS_TOKEN}"
      service:
        pipelines:
          metrics:
            exporters: [debug, otlp]
          traces:
            exporters: [debug, otlp]
          logs:
            exporters: [debug, otlp]
  cluster:
    env:
      - name: ACCESS_TOKEN
        valueFrom:
          secretKeyRef:
            key: access_token
            name: otel-collector-secret
    config:
      exporters:
        otlp:
          endpoint: ingest.example.com:443
          headers:
            "access-token": "${ACCESS_TOKEN}"
      service:
        pipelines:
          metrics:
            exporters: [debug, otlp]
instrumentation:
  enabled: true
  env:
    - name: OTEL_K8S_NODE_NAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
  exporter:
    endpoint: http://${OTEL_K8S_NODE_NAME}:4317
  python:
    env:
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: http://${OTEL_K8S_NODE_NAME}:4318
opAMPBridge:
  enabled: true
  addReportingLabel: true
