# Collect all metrics from pods on the daemon set's node with at least this annotation
# prometheus.io/scrape: 'true'
# This can be further customized by setting the following annotations:
# prometheus.io/scheme: 'https'
# prometheus.io/path: '/data/metrics'
# prometheus.io/port: '80'
- job_name: kubernetes-pods
  scrape_interval: 30s
  kubernetes_sd_configs:
    - role: pod
      selectors:
        - role: pod
          # only scrape data from pods running on the same node as collector
          field: "spec.nodeName=${env:OTEL_K8S_NODE_NAME}"
  relabel_configs:
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
      action: keep
      regex: true
    - source_labels:
        [__meta_kubernetes_pod_annotation_prometheus_io_scrape_slow]
      action: drop
      regex: true
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scheme]
      action: replace
      regex: (https?)
      target_label: __scheme__
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
      action: replace
      target_label: __metrics_path__
      regex: (.+)
    - source_labels:
        [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
      action: replace
      regex: ([^:]+)(?::\d+)?;(\d+)
      # NOTE: otel collector uses env var replacement. $$ is used as a literal $.
      replacement: $$1:$$2
      target_label: __address__
    - action: labelmap
      regex: __meta_kubernetes_pod_annotation_prometheus_io_param_(.+)
      replacement: __param_$$1
    - action: labelmap
      regex: __meta_kubernetes_pod_label_(.+)
    - source_labels: [__meta_kubernetes_namespace]
      action: replace
      target_label: namespace
    - source_labels: [__meta_kubernetes_pod_name]
      action: replace
      target_label: pod
    - source_labels: [__meta_kubernetes_pod_phase]
      regex: Pending|Succeeded|Failed|Completed
      action: drop
    - action: replace
      source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
      target_label: job
# This job is setup to scrape the node metrics on the same host as the daemonset
# https://github.com/open-telemetry/opentelemetry-collector-contrib/issues/29053
- job_name: node-exporter
  scrape_interval: 30s
  relabel_configs:
    - action: labelmap
      regex: __meta_kubernetes_node_label_(.+)
    - action: replace
      regex: "(.*)"
      replacement: "$$1"
      separator: ";"
      source_labels:
        - job
      target_label: __tmp_prometheus_job_name
  static_configs:
    - targets:
        - ${env:OTEL_K8S_NODE_IP}:9100
# We still need to scrape kubelet's CAdvisor which isn't supported in any otel collector receiver
# https://github.com/open-telemetry/opentelemetry-collector-contrib/issues/29053
- authorization:
    credentials_file: "/var/run/secrets/kubernetes.io/serviceaccount/token"
    type: Bearer
  follow_redirects: true
  honor_labels: true
  honor_timestamps: true
  job_name: kubelet
  kubernetes_sd_configs:
    - follow_redirects: true
      role: node
      selectors:
        - role: node
          # only scrape data from pods running on the same node as collector
          field: "metadata.name=${env:OTEL_K8S_NODE_NAME}"
  metric_relabel_configs:
    - action: drop
      regex: container_cpu_(load_average_10s|system_seconds_total|user_seconds_total)
      replacement: "$$1"
      separator: ";"
      source_labels:
        - __name__
    - action: drop
      regex: container_fs_(io_current|reads_merged_total|sector_reads_total|sector_writes_total|writes_merged_total)
      replacement: "$$1"
      separator: ";"
      source_labels:
        - __name__
    - action: drop
      regex: container_memory_(mapped_file|swap)
      replacement: "$$1"
      separator: ";"
      source_labels:
        - __name__
    - action: drop
      regex: container_(file_descriptors|tasks_state|threads_max)
      replacement: "$$1"
      separator: ";"
      source_labels:
        - __name__
    - action: drop
      regex: container_spec.*
      replacement: "$$1"
      separator: ";"
      source_labels:
        - __name__
    - action: drop
      regex: ".+;"
      replacement: "$$1"
      separator: ";"
      source_labels:
        - id
        - pod
  metrics_path: "/metrics/cadvisor"
  relabel_configs:
    - action: replace
      regex: "(.*)"
      replacement: "$$1"
      separator: ";"
      source_labels:
        - job
      target_label: __tmp_prometheus_job_name
    - action: replace
      replacement: "kubelet"
      target_label: job
    - action: replace
      regex: "(.*)"
      replacement: "$$1"
      separator: ";"
      source_labels:
        - __meta_kubernetes_node_name
      target_label: node
    - action: replace
      regex: "(.*)"
      replacement: https-metrics
      separator: ";"
      target_label: endpoint
    - action: replace
      regex: "(.*)"
      replacement: "$$1"
      separator: ";"
      source_labels:
        - __metrics_path__
      target_label: metrics_path
    - action: hashmod
      modulus: 1
      regex: "(.*)"
      replacement: "$$1"
      separator: ";"
      source_labels:
        - __address__
      target_label: __tmp_hash
    - action: keep
      regex: "$(SHARD)"
      replacement: "$$1"
      separator: ";"
      source_labels:
        - __tmp_hash
  scheme: https
  scrape_interval: 15s
  scrape_timeout: 10s
  tls_config:
    ca_file: "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
    insecure_skip_verify: true
